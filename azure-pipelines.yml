# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pr:
- master

variables:
  package_name: x4i3

jobs:

- job: BuildUniversal

  pool:
    vmImage: 'ubuntu-latest'
  variables:
      python.architecture: 'none'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'
  - script: |
      python -m pip install --upgrade pip
      python -m pip install --upgrade setuptools wheel
      python -m pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      python setup.py sdist
    displayName: 'Make sdist'
  - script: |
      python setup.py bdist_wheel --universal
    displayName: 'Make wheel'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'dist'
      artifact: 'artifact_$(package_name)'


- job: TestWindows
  dependsOn: BuildUniversal
  condition: succeeded()
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python.architecture: 'x64'
      Python36:
        python.version: '3.6'
        python.architecture: 'x64'
      Python37:
        python.version: '3.7'
        python.architecture: 'x64'
      Python38:
        python.version: '3.8'
        python.architecture: 'x64'
      Python27_32:
        python.version: '2.7'
        python.architecture: 'x86'
      Python36_32:
        python.version: '3.6'
        python.architecture: 'x86'
      Python37_32:
        python.version: '3.7'
        python.architecture: 'x86'
      Python38_32:
        python.version: '3.8'
        python.architecture: 'x86'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'artifact_$(package_name)'
        path: 'dist'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: '$(python.architecture)'
        displayName: 'Switch to Python $(python.version) on $(python.architecture)'
    - script: |
        python -m pip install --upgrade pip
        python -m pip install $(package_name) --no-index -f dist
      displayName: 'Install wheel'

    - template: azure-tests.yml